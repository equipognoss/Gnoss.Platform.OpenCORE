version: '3.8'

services:
     
  mail:
    image: gnoss/gnoss.backgroundtask.mail.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     intervalo: "100"
    volumes:
     - ./logs/mail:/app/logs
    
  cacherefresh:
    image: gnoss/gnoss.backgroundtask.cacherefresh.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     Servicios__urlFacetas: "${schema_servicios}://${dominio_servicios}/facetas/CargadorFacetas"
     Servicios__urlResultados: "${schema_servicios}://${dominio_servicios}/resultados/CargadorResultados"
     intervalo: "100"
    volumes:
     - ./logs/cacherefresh:/app/logs
     
  communitywall:
    image: gnoss/gnoss.backgroundtask.communitywall.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     intervalo: "100"
    volumes:
     - ./logs/communitywall:/app/logs

  distributor:
    image: gnoss/gnoss.backgroundtask.distributor.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     intervalo: "100"
    volumes:
     - ./logs/distributor:/app/logs

     
  searchgraphgeneration:
    image: gnoss/gnoss.backgroundtask.searchgraphgeneration.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     intervalo: "100"
    volumes:
     - ./logs/searchgraphgeneration:/app/logs

  socialsearchgraphgeneration:
    image: gnoss/gnoss.backgroundtask.socialsearchgraphgeneration.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     Servicios__etiquetadoAutomatico: "${schema_servicios}://${dominio_servicios}/autocompletaretiquetas/EtiquetadoAutomatico"
     intervalo: "100"
    volumes:
     - ./logs/socialsearchgraphgeneration:/app/logs

  socialcacherefresh:
    image: gnoss/gnoss.backgroundtask.socialcacherefresh.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     Servicios__urlFacetas: "${schema_servicios}://${dominio_servicios}/facetas/CargadorFacetas"
     Servicios__urlResultados: "${schema_servicios}://${dominio_servicios}/resultados/CargadorResultados"
     intervalo: "100"
    volumes:
     - ./logs/socialcacherefresh:/app/logs
     
  userwall:
    image: gnoss/gnoss.backgroundtask.userwall.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     intervalo: "100"
    volumes:
     - ./logs/userwall:/app/logs    
     
  visitcluster:
    image: gnoss/gnoss.backgroundtask.visitcluster.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     intervalo: "100"
    volumes:
     - ./logs/visitcluster:/app/logs
     - ./visitcluster/:/app/elementos     
 
  visitregistry:
    image: gnoss/gnoss.backgroundtask.visitregistry.opencore:${version}
    ports:
     - 8545:1745/udp
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     intervalo: "100"
    volumes:
     - ./logs/visitregistry:/app/logs 
     - ./visitregistry/Recursos:/app/recursos
     - ./visitregistry/Votos:/app/Votos
     - ./visitregistry/Visitas:/app/Visitas

  subscriptionsmail:
    image: gnoss/gnoss.backgroundtask.subscriptionsmail.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     intervalo: "100"
    volumes:
     - ./logs/subscriptionsmail:/app/logs 
     
  thumbnail:
    image: gnoss/gnoss.backgroundtask.thumbnailgenerator.opencore:${version}
    mem_limit: 500m
    memswap_limit: 500m
    restart: always
    env_file:
      - ${ruta_docker_env}
    environment:
     Servicios__urlBase: "${schema_servicios}://${dominio_servicios}"
     intervalo: "100"
     Servicios__urlInterno: ${Servicios__urlInterno}
    volumes:
     - ./logs/thumbnail:/app/logs
